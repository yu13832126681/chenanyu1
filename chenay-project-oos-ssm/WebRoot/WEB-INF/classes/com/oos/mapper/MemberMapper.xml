<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.oos.mapper.MemberMapper">
	<resultMap id="BaseResultMap" type="com.oos.model.Member">
		<id column="id" property="id" jdbcType="BIGINT" />
		<result column="username" property="username" jdbcType="VARCHAR" />
		<result column="password" property="password" jdbcType="VARCHAR" />
		<result column="email" property="email" jdbcType="VARCHAR" />
		<result column="is_seller" property="isSeller" jdbcType="INTEGER" />
		<result column="is_forbidden" property="isForbidden" jdbcType="INTEGER" />
		<result column="is_frozen" property="isFrozen" jdbcType="INTEGER" />
		<result column="reg_time" property="regTime" jdbcType="TIMESTAMP" />
		<result column="activate_time" property="activateTime"
			jdbcType="TIMESTAMP" />
		<result column="login_ip" property="loginIp" jdbcType="VARCHAR" />
		<result column="login_time" property="loginTime" jdbcType="TIMESTAMP" />
		<result column="modify_time" property="modifyTime" jdbcType="TIMESTAMP" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		id, username, password, email, is_seller, is_forbidden,
		is_frozen,
		reg_time, activate_time,
		login_ip, login_time, modify_time
	</sql>
	<select id="selectByExample" resultMap="BaseResultMap"
		parameterType="com.oos.model.MemberExample">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from member
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Long">
		select
		<include refid="Base_Column_List" />
		from member
		where id = #{id,jdbcType=BIGINT}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from member
		where id = #{id,jdbcType=BIGINT}
	</delete>
	<delete id="deleteByExample" parameterType="com.oos.model.MemberExample">
		delete from member
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.oos.model.Member">
		<selectKey resultType="java.lang.Long" keyProperty="id"
			order="AFTER">
			SELECT LAST_INSERT_ID()
		</selectKey>
		insert into member (username, password, email,
		is_seller, is_forbidden,
		is_frozen,
		reg_time, activate_time, login_ip,
		login_time, modify_time)
		values (#{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
		#{email,jdbcType=VARCHAR},
		#{isSeller,jdbcType=INTEGER},
		#{isForbidden,jdbcType=INTEGER}, #{isFrozen,jdbcType=INTEGER},
		#{regTime,jdbcType=TIMESTAMP}, #{activateTime,jdbcType=TIMESTAMP},
		#{loginIp,jdbcType=VARCHAR},
		#{loginTime,jdbcType=TIMESTAMP},
		#{modifyTime,jdbcType=TIMESTAMP})
	</insert>
	<insert id="insertSelective" parameterType="com.oos.model.Member">
		<selectKey resultType="java.lang.Long" keyProperty="id"
			order="AFTER">
			SELECT LAST_INSERT_ID()
		</selectKey>
		insert into member
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="username != null">
				username,
			</if>
			<if test="password != null">
				password,
			</if>
			<if test="email != null">
				email,
			</if>
			<if test="isSeller != null">
				is_seller,
			</if>
			<if test="isForbidden != null">
				is_forbidden,
			</if>
			<if test="isFrozen != null">
				is_frozen,
			</if>
			<if test="regTime != null">
				reg_time,
			</if>
			<if test="activateTime != null">
				activate_time,
			</if>
			<if test="loginIp != null">
				login_ip,
			</if>
			<if test="loginTime != null">
				login_time,
			</if>
			<if test="modifyTime != null">
				modify_time,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="username != null">
				#{username,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				#{password,jdbcType=VARCHAR},
			</if>
			<if test="email != null">
				#{email,jdbcType=VARCHAR},
			</if>
			<if test="isSeller != null">
				#{isSeller,jdbcType=INTEGER},
			</if>
			<if test="isForbidden != null">
				#{isForbidden,jdbcType=INTEGER},
			</if>
			<if test="isFrozen != null">
				#{isFrozen,jdbcType=INTEGER},
			</if>
			<if test="regTime != null">
				#{regTime,jdbcType=TIMESTAMP},
			</if>
			<if test="activateTime != null">
				#{activateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="loginIp != null">
				#{loginIp,jdbcType=VARCHAR},
			</if>
			<if test="loginTime != null">
				#{loginTime,jdbcType=TIMESTAMP},
			</if>
			<if test="modifyTime != null">
				#{modifyTime,jdbcType=TIMESTAMP},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.oos.model.MemberExample"
		resultType="java.lang.Integer">
		select count(*) from member
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update member
		<set>
			<if test="record.id != null">
				id = #{record.id,jdbcType=BIGINT},
			</if>
			<if test="record.username != null">
				username = #{record.username,jdbcType=VARCHAR},
			</if>
			<if test="record.password != null">
				password = #{record.password,jdbcType=VARCHAR},
			</if>
			<if test="record.email != null">
				email = #{record.email,jdbcType=VARCHAR},
			</if>
			<if test="record.isSeller != null">
				is_seller = #{record.isSeller,jdbcType=INTEGER},
			</if>
			<if test="record.isForbidden != null">
				is_forbidden = #{record.isForbidden,jdbcType=INTEGER},
			</if>
			<if test="record.isFrozen != null">
				is_frozen = #{record.isFrozen,jdbcType=INTEGER},
			</if>
			<if test="record.regTime != null">
				reg_time = #{record.regTime,jdbcType=TIMESTAMP},
			</if>
			<if test="record.activateTime != null">
				activate_time =
				#{record.activateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="record.loginIp != null">
				login_ip = #{record.loginIp,jdbcType=VARCHAR},
			</if>
			<if test="record.loginTime != null">
				login_time = #{record.loginTime,jdbcType=TIMESTAMP},
			</if>
			<if test="record.modifyTime != null">
				modify_time = #{record.modifyTime,jdbcType=TIMESTAMP},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update member
		set id = #{record.id,jdbcType=BIGINT},
		username =
		#{record.username,jdbcType=VARCHAR},
		password =
		#{record.password,jdbcType=VARCHAR},
		email =
		#{record.email,jdbcType=VARCHAR},
		is_seller =
		#{record.isSeller,jdbcType=INTEGER},
		is_forbidden =
		#{record.isForbidden,jdbcType=INTEGER},
		is_frozen =
		#{record.isFrozen,jdbcType=INTEGER},
		reg_time =
		#{record.regTime,jdbcType=TIMESTAMP},
		activate_time =
		#{record.activateTime,jdbcType=TIMESTAMP},
		login_ip =
		#{record.loginIp,jdbcType=VARCHAR},
		login_time =
		#{record.loginTime,jdbcType=TIMESTAMP},
		modify_time =
		#{record.modifyTime,jdbcType=TIMESTAMP}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.oos.model.Member">
		update member
		<set>
			<if test="username != null">
				username = #{username,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				password = #{password,jdbcType=VARCHAR},
			</if>
			<if test="email != null">
				email = #{email,jdbcType=VARCHAR},
			</if>
			<if test="isSeller != null">
				is_seller = #{isSeller,jdbcType=INTEGER},
			</if>
			<if test="isForbidden != null">
				is_forbidden = #{isForbidden,jdbcType=INTEGER},
			</if>
			<if test="isFrozen != null">
				is_frozen = #{isFrozen,jdbcType=INTEGER},
			</if>
			<if test="regTime != null">
				reg_time = #{regTime,jdbcType=TIMESTAMP},
			</if>
			<if test="activateTime != null">
				activate_time = #{activateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="loginIp != null">
				login_ip = #{loginIp,jdbcType=VARCHAR},
			</if>
			<if test="loginTime != null">
				login_time = #{loginTime,jdbcType=TIMESTAMP},
			</if>
			<if test="modifyTime != null">
				modify_time = #{modifyTime,jdbcType=TIMESTAMP},
			</if>
		</set>
		where id = #{id,jdbcType=BIGINT}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.oos.model.Member">
		update member
		set
		username = #{username,jdbcType=VARCHAR},
		password =
		#{password,jdbcType=VARCHAR},
		email = #{email,jdbcType=VARCHAR},
		is_seller = #{isSeller,jdbcType=INTEGER},
		is_forbidden =
		#{isForbidden,jdbcType=INTEGER},
		is_frozen =
		#{isFrozen,jdbcType=INTEGER},
		reg_time = #{regTime,jdbcType=TIMESTAMP},
		activate_time = #{activateTime,jdbcType=TIMESTAMP},
		login_ip =
		#{loginIp,jdbcType=VARCHAR},
		login_time =
		#{loginTime,jdbcType=TIMESTAMP},
		modify_time =
		#{modifyTime,jdbcType=TIMESTAMP}
		where id = #{id,jdbcType=BIGINT}
	</update>
	<select id="selectPage" resultMap="BaseResultMap" parameterType="com.oos.model.MemberExample">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from member
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
		limit #{pageIndex},#{pageSize}
	</select>

	<!-- 通过username查询member信息 -->
	<select id="findByUsername" resultMap="BaseResultMap"
		parameterType="string">
		select
		<include refid="Base_Column_List" />
		from member
		where username = #{username,jdbcType=VARCHAR}
	</select>

	<!-- 通过email查询member信息 -->
	<select id="findByEmail" resultMap="BaseResultMap"
		parameterType="string">
		select
		<include refid="Base_Column_List" />
		from member
		where email = #{email,jdbcType=VARCHAR}
	</select>

	<!-- 通过条件查询member的分页列表 -->
	<select id="findByCondition" resultMap="BaseResultMap"
		parameterType="map">
		select * from member m
		<where>
			<if test="userName != null">
				m.username=#{userName,jdbcType=VARCHAR}
			</if>
		</where>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
		<if test="start!=null and limit!=null">
			limit #{start},#{limit}
		</if>
	</select>
</mapper>