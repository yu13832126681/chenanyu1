<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.oos.mapper.CartMapper">
	<resultMap id="BaseResultMap" type="com.oos.model.Cart">
		<id column="Id" property="id" jdbcType="BIGINT" />
		<result column="member_id" property="memberId" jdbcType="BIGINT" />
		<result column="shop_id" property="shopId" jdbcType="BIGINT" />
		<result column="dish_id" property="dishId" jdbcType="BIGINT" />
		<result column="num" property="num" jdbcType="INTEGER" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		Id, member_id, shop_id, dish_id, num
	</sql>
	<select id="selectByExample" resultMap="BaseResultMap"
		parameterType="com.oos.model.CartExample">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from cart
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Long">
		select
		<include refid="Base_Column_List" />
		from cart
		where Id = #{id,jdbcType=BIGINT}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from cart
		where Id = #{id,jdbcType=BIGINT}
	</delete>
	<delete id="deleteByExample" parameterType="com.oos.model.CartExample">
		delete from cart
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.oos.model.Cart">
		<selectKey resultType="java.lang.Long" keyProperty="id"
			order="AFTER">
			SELECT LAST_INSERT_ID()
		</selectKey>
		insert into cart (member_id, shop_id, dish_id,
		num)
		values
		(#{memberId,jdbcType=BIGINT}, #{shopId,jdbcType=BIGINT},
		#{dishId,jdbcType=BIGINT},
		#{num,jdbcType=INTEGER})
	</insert>
	<insert id="insertSelective" parameterType="com.oos.model.Cart">
		<selectKey resultType="java.lang.Long" keyProperty="id"
			order="AFTER">
			SELECT LAST_INSERT_ID()
		</selectKey>
		insert into cart
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="memberId != null">
				member_id,
			</if>
			<if test="shopId != null">
				shop_id,
			</if>
			<if test="dishId != null">
				dish_id,
			</if>
			<if test="num != null">
				num,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="memberId != null">
				#{memberId,jdbcType=BIGINT},
			</if>
			<if test="shopId != null">
				#{shopId,jdbcType=BIGINT},
			</if>
			<if test="dishId != null">
				#{dishId,jdbcType=BIGINT},
			</if>
			<if test="num != null">
				#{num,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.oos.model.CartExample"
		resultType="java.lang.Integer">
		select count(*) from cart
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update cart
		<set>
			<if test="record.id != null">
				Id = #{record.id,jdbcType=BIGINT},
			</if>
			<if test="record.memberId != null">
				member_id = #{record.memberId,jdbcType=BIGINT},
			</if>
			<if test="record.shopId != null">
				shop_id = #{record.shopId,jdbcType=BIGINT},
			</if>
			<if test="record.dishId != null">
				dish_id = #{record.dishId,jdbcType=BIGINT},
			</if>
			<if test="record.num != null">
				num = #{record.num,jdbcType=INTEGER},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update cart
		set Id = #{record.id,jdbcType=BIGINT},
		member_id =
		#{record.memberId,jdbcType=BIGINT},
		shop_id =
		#{record.shopId,jdbcType=BIGINT},
		dish_id =
		#{record.dishId,jdbcType=BIGINT},
		num = #{record.num,jdbcType=INTEGER}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.oos.model.Cart">
		update cart
		<set>
			<if test="memberId != null">
				member_id = #{memberId,jdbcType=BIGINT},
			</if>
			<if test="shopId != null">
				shop_id = #{shopId,jdbcType=BIGINT},
			</if>
			<if test="dishId != null">
				dish_id = #{dishId,jdbcType=BIGINT},
			</if>
			<if test="num != null">
				num = #{num,jdbcType=INTEGER},
			</if>
		</set>
		where Id = #{id,jdbcType=BIGINT}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.oos.model.Cart">
		update cart
		set
		member_id = #{memberId,jdbcType=BIGINT},
		shop_id =
		#{shopId,jdbcType=BIGINT},
		dish_id = #{dishId,jdbcType=BIGINT},
		num =
		#{num,jdbcType=INTEGER}
		where Id = #{id,jdbcType=BIGINT}
	</update>
	<select id="selectPage" resultMap="BaseResultMap" parameterType="com.oos.model.CartExample">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from cart
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
		limit #{pageIndex},#{pageSize}
	</select>

	<!-- 引入shop和dish表 -->
	<resultMap id="ShopResultMap" type="com.oos.model.Shop">
		<id column="shop_id" property="id" jdbcType="BIGINT" />
		<result column="member_id" property="memberId" jdbcType="BIGINT" />
		<result column="sname" property="sname" jdbcType="VARCHAR" />
		<result column="pic" property="pic" jdbcType="VARCHAR" />
		<result column="address" property="address" jdbcType="VARCHAR" />
		<result column="tel" property="tel" jdbcType="VARCHAR" />
		<result column="status" property="status" jdbcType="INTEGER" />
		<result column="freight" property="freight" jdbcType="DOUBLE" />
		<result column="free_freight_amount" property="freeFreightAmount"
			jdbcType="DOUBLE" />
		<result column="wait_minutes" property="waitMinutes" jdbcType="INTEGER" />
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
		<result column="modify_time" property="modifyTime" jdbcType="TIMESTAMP" />
	</resultMap>
	<resultMap id="DishResultMap" type="com.oos.model.Dish">
		<id column="dish_id" property="id" jdbcType="BIGINT" />
		<result column="shop_id" property="shopId" jdbcType="BIGINT" />
		<result column="dname" property="dname" jdbcType="VARCHAR" />
		<result column="ddesc" property="ddesc" jdbcType="VARCHAR" />
		<result column="status" property="status" jdbcType="INTEGER" />
		<result column="is_deleted" property="isDeleted" jdbcType="INTEGER" />
		<result column="price" property="price" jdbcType="DOUBLE" />
		<result column="coupon" property="coupon" jdbcType="DOUBLE" />
		<result column="on_sale_date" property="onSaleDate" jdbcType="TIMESTAMP" />
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
		<result column="modify_time" property="modifyTime" jdbcType="TIMESTAMP" />
	</resultMap>
	<resultMap id="CartResultMap" type="com.oos.model.Cart">
		<id column="Id" property="id" jdbcType="BIGINT" />
		<result column="member_id" property="memberId" jdbcType="BIGINT" />
		<result column="shop_id" property="shopId" jdbcType="BIGINT" />
		<result column="dish_id" property="dishId" jdbcType="BIGINT" />
		<result column="num" property="num" jdbcType="INTEGER" />
		<association property="shop" column="shop_id" javaType="com.oos.model.Shop"
			resultMap="ShopResultMap" />
		<association property="dish" column="dish_id" javaType="com.oos.model.Dish"
			resultMap="DishResultMap" />
	</resultMap>

	<!-- 通过memberId查询cart中shop信息 -->
	<select id="getShopByMemberId" resultMap="CartResultMap"
		parameterType="java.lang.Long">
		select c.shop_id,s.*
		from cart c left join shop s on
		c.shop_id=s.id
		where c.member_id = #{memberId,jdbcType=BIGINT}
	</select>

	<!-- 通过memberId和shopId查询cart中dish信息 -->
	<select id="getDishBySMId" resultMap="CartResultMap"
		parameterType="map">
		select c.dish_id,c.num,d.*
		from cart c left join dish d
		on
		c.dish_id=d.id
		where
		c.member_id = #{memberId,jdbcType=VARCHAR}
		and
		c.shop_id = #{shopId,jdbcType=INTEGER}
	</select>

	<!-- 修改数量(通过memberId和dishId)？ -->
	<update id="updateNum" parameterType="com.oos.model.Cart">
		update cart
		<set>
			<if test="num != null">
				num = #{num,jdbcType=INTEGER},
			</if>
		</set>
		where member_id = #{memberId,jdbcType=BIGINT}
		and dish_id =
		#{dishId,jdbcType=BIGINT}
	</update>

	<!-- 获取购物车(通过memberId和dishId) -->
	<select id="getByMDId" resultMap="CartResultMap" parameterType="map">
		select c.*,s.*,d.*
		from cart c left join dish d on c.dish_id = d.id
		left join shop s on c.shop_id = s.id
		where c.member_id =
		#{memberId,jdbcType=BIGINT}
		and c.dish_id =
		#{dishId,jdbcType=BIGINT}
	</select>

	<!-- 删除菜品(通过memberId和dishId) -->
	<delete id="deleteByMDId" parameterType="map">
		delete from cart
		where
		member_id = #{memberId,jdbcType=BIGINT}
		and
		dish_id =
		#{dishId,jdbcType=BIGINT}
	</delete>

	<!-- 获取购物车中菜品总数量(通过memberId) -->
	<select id="getTotalByMId" parameterType="java.lang.Long"
		resultType="java.lang.Integer">
		select sum(num) from cart where member_id =
		#{memberId,jdbcType=BIGINT}
	</select>

	<!-- 获取已选择的菜品的数量(通过memberId和dishId)(没使用) -->
	<select id="getCheckedNum" parameterType="map" resultType="java.lang.Integer">
		select num from cart
		where member_id = #{memberId,jdbcType=BIGINT}
		and
		dish_id = #{dishId,jdbcType=BIGINT}
	</select>
</mapper>