<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.oos.mapper.DishFavoriteMapper">
	<resultMap id="BaseResultMap" type="com.oos.model.DishFavorite">
		<id column="Id" property="id" jdbcType="BIGINT" />
		<result column="member_id" property="memberId" jdbcType="BIGINT" />
		<result column="dish_id" property="dishId" jdbcType="BIGINT" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		Id, member_id, dish_id
	</sql>
	<select id="selectByExample" resultMap="BaseResultMap"
		parameterType="com.oos.model.DishFavoriteExample">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from dish_favorite
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Long">
		select
		<include refid="Base_Column_List" />
		from dish_favorite
		where Id = #{id,jdbcType=BIGINT}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from
		dish_favorite
		where Id = #{id,jdbcType=BIGINT}
	</delete>
	<delete id="deleteByExample" parameterType="com.oos.model.DishFavoriteExample">
		delete from dish_favorite
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.oos.model.DishFavorite">
		<selectKey resultType="java.lang.Long" keyProperty="id"
			order="AFTER">
			SELECT LAST_INSERT_ID()
		</selectKey>
		insert into dish_favorite (member_id, dish_id)
		values
		(#{memberId,jdbcType=BIGINT}, #{dishId,jdbcType=BIGINT})
	</insert>
	<insert id="insertSelective" parameterType="com.oos.model.DishFavorite">
		<selectKey resultType="java.lang.Long" keyProperty="id"
			order="AFTER">
			SELECT LAST_INSERT_ID()
		</selectKey>
		insert into dish_favorite
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="memberId != null">
				member_id,
			</if>
			<if test="dishId != null">
				dish_id,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="memberId != null">
				#{memberId,jdbcType=BIGINT},
			</if>
			<if test="dishId != null">
				#{dishId,jdbcType=BIGINT},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.oos.model.DishFavoriteExample"
		resultType="java.lang.Integer">
		select count(*) from dish_favorite
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update dish_favorite
		<set>
			<if test="record.id != null">
				Id = #{record.id,jdbcType=BIGINT},
			</if>
			<if test="record.memberId != null">
				member_id = #{record.memberId,jdbcType=BIGINT},
			</if>
			<if test="record.dishId != null">
				dish_id = #{record.dishId,jdbcType=BIGINT},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update dish_favorite
		set Id = #{record.id,jdbcType=BIGINT},
		member_id =
		#{record.memberId,jdbcType=BIGINT},
		dish_id =
		#{record.dishId,jdbcType=BIGINT}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.oos.model.DishFavorite">
		update dish_favorite
		<set>
			<if test="memberId != null">
				member_id = #{memberId,jdbcType=BIGINT},
			</if>
			<if test="dishId != null">
				dish_id = #{dishId,jdbcType=BIGINT},
			</if>
		</set>
		where Id = #{id,jdbcType=BIGINT}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.oos.model.DishFavorite">
		update
		dish_favorite
		set member_id = #{memberId,jdbcType=BIGINT},
		dish_id =
		#{dishId,jdbcType=BIGINT}
		where Id = #{id,jdbcType=BIGINT}
	</update>
	<select id="selectPage" resultMap="BaseResultMap"
		parameterType="com.oos.model.DishFavoriteExample">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from dish_favorite
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
		limit #{pageIndex},#{pageSize}
	</select>

	<!-- 引入dish表 -->
	<resultMap id="DishResultMap" type="com.oos.model.Dish">
		<id column="dish_id" property="id" jdbcType="BIGINT" />
		<result column="shop_id" property="shopId" jdbcType="BIGINT" />
		<result column="dname" property="dname" jdbcType="VARCHAR" />
		<result column="ddesc" property="ddesc" jdbcType="VARCHAR" />
		<result column="status" property="status" jdbcType="INTEGER" />
		<result column="is_deleted" property="isDeleted" jdbcType="INTEGER" />
		<result column="price" property="price" jdbcType="DOUBLE" />
		<result column="coupon" property="coupon" jdbcType="DOUBLE" />
		<result column="on_sale_date" property="onSaleDate" jdbcType="TIMESTAMP" />
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
		<result column="modify_time" property="modifyTime" jdbcType="TIMESTAMP" />
	</resultMap>
	<resultMap id="DishFavoriteResultMap" type="com.oos.model.DishFavorite">
		<id column="Id" property="id" jdbcType="BIGINT" />
		<result column="member_id" property="memberId" jdbcType="BIGINT" />
		<result column="dish_id" property="dishId" jdbcType="BIGINT" />
		<association property="dish" column="dish_id" javaType="com.oos.model.Dish"
			resultMap="DishResultMap" />
	</resultMap>

	<!-- 通过memberId获取菜品收藏数量 -->
	<select id="getTotalByMemberId" parameterType="java.lang.Long"
		resultType="java.lang.Integer">
		select count(*) from dish_favorite
		where
		member_id=#{memberId,jdbcType=BIGINT}
	</select>

	<!-- 通过memberId获取菜品收藏分页数据 -->
	<select id="getPageByMemberId" resultMap="DishFavoriteResultMap"
		parameterType="map">
		select df.dish_id,d.*
		from dish_favorite df left join dish d
		on
		df.dish_id=d.id
		where
		member_id=#{memberId,jdbcType=BIGINT}
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
		<if test="start!=null and limit!=null">
			limit #{start},#{limit}
		</if>
	</select>

	<!-- 取消收藏，通过memberId和dishId删除表中数据 -->
	<delete id="deleteByMDId" parameterType="map">
		delete from
		dish_favorite
		where member_id = #{memberId,jdbcType=INTEGER} and
		dish_id = #{dishId,jdbcType=INTEGER}
	</delete>

	<!-- 查询是否被收藏通过memberId和dishId -->
	<select id="selectByMDId" resultMap="DishFavoriteResultMap"
		parameterType="map">
		select *
		from dish_favorite
		where
		member_id=#{memberId,jdbcType=BIGINT}
		and
		dish_id=#{dishId,jdbcType=BIGINT}
	</select>
</mapper>