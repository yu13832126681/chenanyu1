<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://java.sun.com/xml/ns/javaee" xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	id="WebApp_ID" version="2.5">
	<display-name>j2ee-project-oos-ssm</display-name>
	<welcome-file-list>
		<welcome-file>index.html</welcome-file>
		<welcome-file>index.htm</welcome-file>
		<welcome-file>index.jsp</welcome-file>
		<welcome-file>default.html</welcome-file>
		<welcome-file>default.htm</welcome-file>
		<welcome-file>default.jsp</welcome-file>
	</welcome-file-list>

	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath:config/spring-*.xml</param-value>
	</context-param>
	
	<!-- 
	  在Web应用程序关闭时IntrospectorCleanupListener将会刷新JDK的JavaBeans的Introspector缓存。
	  	在你的web.xml中注册这个listener来确保Web应用程序的类加载器以及其加载的类正确的释放资源
	 IntrospectorCleanupListener应该注册为web.xml中的第一个Listener，在任何其他Listener之前注册,
	 	比如在Spring's ContextLoaderListener注册之前,
	 	才能确保IntrospectorCleanupListener在Web应用的生命周期适当时机生效
	 -->
	<listener>
		<listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>
	</listener>

	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	
	<!-- 
	支持web应用环境相关的Bean作用域
	使用spring的webApplicationContext,则可以使用另外3种Bean的作用域:request,session和globalSession
	需要配置RequestContextListener,实现了ServletRequestListener
	同时,可以获取和web请求相关的其他资源比如request,response等
	 -->
	<listener>
		<listener-class>  
            org.springframework.web.context.request.RequestContextListener  
        </listener-class>  
	</listener>

	<!-- 字符编码过滤器（防止乱码）开始 -->
	<filter>
		<filter-name>characterEncodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>characterEncodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	<!-- 设置请求上下文路径,便于freemarker中使用 -->
	<servlet>
		<servlet-name>contextPathInit</servlet-name>
		<servlet-class>com.oos.framwork.ContextPathInitServlet</servlet-class>
		<load-on-startup>1</load-on-startup>
	</servlet>

	<servlet>
		<servlet-name>springmvc-servlet</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath:/config/springmvc-servlet.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>springmvc-servlet</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>
	
	<error-page>
		<error-code>404</error-code>
		<location>/WEB-INF/error.jsp</location>
	</error-page>
	
	<error-page>
		<error-code>500</error-code>
		<location>/WEB-INF/error.jsp</location>
	</error-page>

</web-app>