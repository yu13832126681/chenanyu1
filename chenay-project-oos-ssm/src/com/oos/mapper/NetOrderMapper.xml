<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.oos.mapper.NetOrderMapper">
	<resultMap id="BaseResultMap" type="com.oos.model.NetOrder">
		<id column="id" property="id" jdbcType="BIGINT" />
		<result column="member_id" property="memberId" jdbcType="BIGINT" />
		<result column="shop_id" property="shopId" jdbcType="BIGINT" />
		<result column="qty" property="qty" jdbcType="INTEGER" />
		<result column="total" property="total" jdbcType="DOUBLE" />
		<result column="address" property="address" jdbcType="VARCHAR" />
		<result column="receiver" property="receiver" jdbcType="VARCHAR" />
		<result column="freight" property="freight" jdbcType="DOUBLE" />
		<result column="order_time" property="orderTime" jdbcType="TIMESTAMP" />
		<result column="status" property="status" jdbcType="INTEGER" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		id, member_id, shop_id, qty, total, address, receiver,
		freight,
		order_time, status
	</sql>
	<select id="selectByExample" resultMap="BaseResultMap"
		parameterType="com.oos.model.NetOrderExample">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from netorder
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Long">
		select
		<include refid="Base_Column_List" />
		from netorder
		where id = #{id,jdbcType=BIGINT}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from
		netorder
		where id = #{id,jdbcType=BIGINT}
	</delete>
	<delete id="deleteByExample" parameterType="com.oos.model.NetOrderExample">
		delete from netorder
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.oos.model.NetOrder">
		<selectKey resultType="java.lang.Long" keyProperty="id"
			order="AFTER">
			SELECT LAST_INSERT_ID()
		</selectKey>
		insert into netorder (member_id, shop_id, qty,
		total, address,
		receiver,
		freight, order_time, status
		)
		values
		(#{memberId,jdbcType=BIGINT}, #{shopId,jdbcType=BIGINT},
		#{qty,jdbcType=INTEGER},
		#{total,jdbcType=DOUBLE},
		#{address,jdbcType=VARCHAR}, #{receiver,jdbcType=VARCHAR},
		#{freight,jdbcType=DOUBLE}, #{orderTime,jdbcType=TIMESTAMP},
		#{status,jdbcType=INTEGER}
		)
	</insert>
	<insert id="insertSelective" parameterType="com.oos.model.NetOrder">
		<selectKey resultType="java.lang.Long" keyProperty="id"
			order="AFTER">
			SELECT LAST_INSERT_ID()
		</selectKey>
		insert into netorder
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="memberId != null">
				member_id,
			</if>
			<if test="shopId != null">
				shop_id,
			</if>
			<if test="qty != null">
				qty,
			</if>
			<if test="total != null">
				total,
			</if>
			<if test="address != null">
				address,
			</if>
			<if test="receiver != null">
				receiver,
			</if>
			<if test="freight != null">
				freight,
			</if>
			<if test="orderTime != null">
				order_time,
			</if>
			<if test="status != null">
				status,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="memberId != null">
				#{memberId,jdbcType=BIGINT},
			</if>
			<if test="shopId != null">
				#{shopId,jdbcType=BIGINT},
			</if>
			<if test="qty != null">
				#{qty,jdbcType=INTEGER},
			</if>
			<if test="total != null">
				#{total,jdbcType=DOUBLE},
			</if>
			<if test="address != null">
				#{address,jdbcType=VARCHAR},
			</if>
			<if test="receiver != null">
				#{receiver,jdbcType=VARCHAR},
			</if>
			<if test="freight != null">
				#{freight,jdbcType=DOUBLE},
			</if>
			<if test="orderTime != null">
				#{orderTime,jdbcType=TIMESTAMP},
			</if>
			<if test="status != null">
				#{status,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.oos.model.NetOrderExample"
		resultType="java.lang.Integer">
		select count(*) from netorder
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update netorder
		<set>
			<if test="record.id != null">
				id = #{record.id,jdbcType=BIGINT},
			</if>
			<if test="record.memberId != null">
				member_id = #{record.memberId,jdbcType=BIGINT},
			</if>
			<if test="record.shopId != null">
				shop_id = #{record.shopId,jdbcType=BIGINT},
			</if>
			<if test="record.qty != null">
				qty = #{record.qty,jdbcType=INTEGER},
			</if>
			<if test="record.total != null">
				total = #{record.total,jdbcType=DOUBLE},
			</if>
			<if test="record.address != null">
				address = #{record.address,jdbcType=VARCHAR},
			</if>
			<if test="record.receiver != null">
				receiver = #{record.receiver,jdbcType=VARCHAR},
			</if>
			<if test="record.freight != null">
				freight = #{record.freight,jdbcType=DOUBLE},
			</if>
			<if test="record.orderTime != null">
				order_time = #{record.orderTime,jdbcType=TIMESTAMP},
			</if>
			<if test="record.status != null">
				status = #{record.status,jdbcType=INTEGER},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update netorder
		set id = #{record.id,jdbcType=BIGINT},
		member_id =
		#{record.memberId,jdbcType=BIGINT},
		shop_id =
		#{record.shopId,jdbcType=BIGINT},
		qty = #{record.qty,jdbcType=INTEGER},
		total = #{record.total,jdbcType=DOUBLE},
		address =
		#{record.address,jdbcType=VARCHAR},
		receiver =
		#{record.receiver,jdbcType=VARCHAR},
		freight =
		#{record.freight,jdbcType=DOUBLE},
		order_time =
		#{record.orderTime,jdbcType=TIMESTAMP},
		status =
		#{record.status,jdbcType=INTEGER}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.oos.model.NetOrder">
		update netorder
		<set>
			<if test="memberId != null">
				member_id = #{memberId,jdbcType=BIGINT},
			</if>
			<if test="shopId != null">
				shop_id = #{shopId,jdbcType=BIGINT},
			</if>
			<if test="qty != null">
				qty = #{qty,jdbcType=INTEGER},
			</if>
			<if test="total != null">
				total = #{total,jdbcType=DOUBLE},
			</if>
			<if test="address != null">
				address = #{address,jdbcType=VARCHAR},
			</if>
			<if test="receiver != null">
				receiver = #{receiver,jdbcType=VARCHAR},
			</if>
			<if test="freight != null">
				freight = #{freight,jdbcType=DOUBLE},
			</if>
			<if test="orderTime != null">
				order_time = #{orderTime,jdbcType=TIMESTAMP},
			</if>
			<if test="status != null">
				status = #{status,jdbcType=INTEGER},
			</if>
		</set>
		where id = #{id,jdbcType=BIGINT}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.oos.model.NetOrder">
		update netorder
		set member_id = #{memberId,jdbcType=BIGINT},
		shop_id =
		#{shopId,jdbcType=BIGINT},
		qty = #{qty,jdbcType=INTEGER},
		total =
		#{total,jdbcType=DOUBLE},
		address = #{address,jdbcType=VARCHAR},
		receiver = #{receiver,jdbcType=VARCHAR},
		freight =
		#{freight,jdbcType=DOUBLE},
		order_time =
		#{orderTime,jdbcType=TIMESTAMP},
		status = #{status,jdbcType=INTEGER}
		where id = #{id,jdbcType=BIGINT}
	</update>
	<select id="selectPage" resultMap="BaseResultMap"
		parameterType="com.oos.model.NetOrderExample">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from netorder
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
		limit #{pageIndex},#{pageSize}
	</select>

	<!-- 通过shopId查询店铺总销量 -->
	<select id="getSaleNumByShopId" resultMap="BaseResultMap"
		parameterType="java.lang.Long">
		select no.qty
		<include refid="Base_Column_List" />
		from netorder no
		where no.shop_id = #{shopId,jdbcType=BIGINT}
	</select>

	<!-- 通过memberId查询订单数量 -->
	<select id="getTotalByMemberId" parameterType="java.lang.Long"
		resultType="java.lang.Integer">
		select count(*) from netorder no
		where
		no.member_id=#{memberId,jdbcType=BIGINT}
	</select>

	<!-- 通过memberId查询所有订单的分页数据 -->
	<select id="getOrderByPage" resultMap="BaseResultMap"
		parameterType="map">
		select no.*,s.sname
		from netorder no left join shop s
		on no.shop_id=s.id
		where
		no.member_id=#{memberId,jdbcType=BIGINT}
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
		<if test="start!=null and limit!=null">
			limit #{start},#{limit}
		</if>
	</select>
</mapper>