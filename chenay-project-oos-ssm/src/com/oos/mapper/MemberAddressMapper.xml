<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.oos.mapper.MemberAddressMapper">
	<resultMap id="BaseResultMap" type="com.oos.model.MemberAddress">
		<id column="Id" property="id" jdbcType="INTEGER" />
		<result column="member_id" property="memberId" jdbcType="BIGINT" />
		<result column="receiver" property="receiver" jdbcType="VARCHAR" />
		<result column="address" property="address" jdbcType="VARCHAR" />
		<result column="is_default" property="isDefault" jdbcType="INTEGER" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		Id, member_id, receiver, address, is_default
	</sql>
	<select id="selectByExample" resultMap="BaseResultMap"
		parameterType="com.oos.model.MemberAddressExample">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from member_address
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from member_address
		where Id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from
		member_address
		where Id = #{id,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample" parameterType="com.oos.model.MemberAddressExample">
		delete from member_address
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.oos.model.MemberAddress">
		<selectKey resultType="java.lang.Integer" keyProperty="id"
			order="AFTER">
			SELECT LAST_INSERT_ID()
		</selectKey>
		insert into member_address (member_id, receiver, address,
		is_default)
		values (#{memberId,jdbcType=BIGINT}, #{receiver,jdbcType=VARCHAR},
		#{address,jdbcType=VARCHAR},
		#{isDefault,jdbcType=INTEGER})
	</insert>
	<insert id="insertSelective" parameterType="com.oos.model.MemberAddress">
		<selectKey resultType="java.lang.Integer" keyProperty="id"
			order="AFTER">
			SELECT LAST_INSERT_ID()
		</selectKey>
		insert into member_address
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="memberId != null">
				member_id,
			</if>
			<if test="receiver != null">
				receiver,
			</if>
			<if test="address != null">
				address,
			</if>
			<if test="isDefault != null">
				is_default,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="memberId != null">
				#{memberId,jdbcType=BIGINT},
			</if>
			<if test="receiver != null">
				#{receiver,jdbcType=VARCHAR},
			</if>
			<if test="address != null">
				#{address,jdbcType=VARCHAR},
			</if>
			<if test="isDefault != null">
				#{isDefault,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.oos.model.MemberAddressExample"
		resultType="java.lang.Integer">
		select count(*) from member_address
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update member_address
		<set>
			<if test="record.id != null">
				Id = #{record.id,jdbcType=INTEGER},
			</if>
			<if test="record.memberId != null">
				member_id = #{record.memberId,jdbcType=BIGINT},
			</if>
			<if test="record.receiver != null">
				receiver = #{record.receiver,jdbcType=VARCHAR},
			</if>
			<if test="record.address != null">
				address = #{record.address,jdbcType=VARCHAR},
			</if>
			<if test="record.isDefault != null">
				is_default = #{record.isDefault,jdbcType=INTEGER},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update member_address
		set Id = #{record.id,jdbcType=INTEGER},
		member_id
		= #{record.memberId,jdbcType=BIGINT},
		receiver =
		#{record.receiver,jdbcType=VARCHAR},
		address =
		#{record.address,jdbcType=VARCHAR},
		is_default =
		#{record.isDefault,jdbcType=INTEGER}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.oos.model.MemberAddress">
		update member_address
		<set>
			<if test="memberId != null">
				member_id = #{memberId,jdbcType=BIGINT},
			</if>
			<if test="receiver != null">
				receiver = #{receiver,jdbcType=VARCHAR},
			</if>
			<if test="address != null">
				address = #{address,jdbcType=VARCHAR},
			</if>
			<if test="isDefault != null">
				is_default = #{isDefault,jdbcType=INTEGER},
			</if>
		</set>
		where Id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.oos.model.MemberAddress">
		update
		member_address
		set member_id = #{memberId,jdbcType=BIGINT},
		receiver =
		#{receiver,jdbcType=VARCHAR},
		address = #{address,jdbcType=VARCHAR},
		is_default = #{isDefault,jdbcType=INTEGER}
		where Id =
		#{id,jdbcType=INTEGER}
	</update>
	<select id="selectPage" resultMap="BaseResultMap"
		parameterType="com.oos.model.MemberAddressExample">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from member_address
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
		limit #{pageIndex},#{pageSize}
	</select>

	<!-- 通过memberId获取地址的列表信息 -->
	<select id="getByMemberId" resultMap="BaseResultMap"
		parameterType="java.lang.Long">
		select
		<include refid="Base_Column_List" />
		from member_address
		where member_id = #{memberId,jdbcType=INTEGER}
		order by is_default desc
	</select>

	<!-- 取消默认地址 -->
	<update id="deleteDefault" parameterType="java.lang.Integer">
		update member_address
		set
		is_default = 0
		where is_default = #{isDefault,jdbcType=INTEGER}
	</update>
</mapper>