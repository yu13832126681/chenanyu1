<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.oos.mapper.NetOrderDishMapper">
	<resultMap id="BaseResultMap" type="com.oos.model.NetOrderDish">
		<id column="id" property="id" jdbcType="BIGINT" />
		<result column="shop_id" property="shopId" jdbcType="BIGINT" />
		<result column="order_id" property="orderId" jdbcType="BIGINT" />
		<result column="dish_id" property="dishId" jdbcType="BIGINT" />
		<result column="price" property="price" jdbcType="DOUBLE" />
		<result column="qty" property="qty" jdbcType="INTEGER" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		id, shop_id, order_id, dish_id, price, qty
	</sql>
	<select id="selectByExample" resultMap="BaseResultMap"
		parameterType="com.oos.model.NetOrderDishExample">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from netorder_dishes
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Long">
		select
		<include refid="Base_Column_List" />
		from netorder_dishes
		where id = #{id,jdbcType=BIGINT}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from
		netorder_dishes
		where id = #{id,jdbcType=BIGINT}
	</delete>
	<delete id="deleteByExample" parameterType="com.oos.model.NetOrderDishExample">
		delete from netorder_dishes
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.oos.model.NetOrderDish">
		<selectKey resultType="java.lang.Long" keyProperty="id"
			order="AFTER">
			SELECT LAST_INSERT_ID()
		</selectKey>
		insert into netorder_dishes (shop_id, order_id, dish_id,
		price, qty)
		values (#{shopId,jdbcType=BIGINT}, #{orderId,jdbcType=BIGINT},
		#{dishId,jdbcType=BIGINT},
		#{price,jdbcType=DOUBLE},
		#{qty,jdbcType=INTEGER})
	</insert>
	<insert id="insertSelective" parameterType="com.oos.model.NetOrderDish">
		<selectKey resultType="java.lang.Long" keyProperty="id"
			order="AFTER">
			SELECT LAST_INSERT_ID()
		</selectKey>
		insert into netorder_dishes
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="shopId != null">
				shop_id,
			</if>
			<if test="orderId != null">
				order_id,
			</if>
			<if test="dishId != null">
				dish_id,
			</if>
			<if test="price != null">
				price,
			</if>
			<if test="qty != null">
				qty,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="shopId != null">
				#{shopId,jdbcType=BIGINT},
			</if>
			<if test="orderId != null">
				#{orderId,jdbcType=BIGINT},
			</if>
			<if test="dishId != null">
				#{dishId,jdbcType=BIGINT},
			</if>
			<if test="price != null">
				#{price,jdbcType=DOUBLE},
			</if>
			<if test="qty != null">
				#{qty,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.oos.model.NetOrderDishExample"
		resultType="java.lang.Integer">
		select count(*) from netorder_dishes
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update netorder_dishes
		<set>
			<if test="record.id != null">
				id = #{record.id,jdbcType=BIGINT},
			</if>
			<if test="record.shopId != null">
				shop_id = #{record.shopId,jdbcType=BIGINT},
			</if>
			<if test="record.orderId != null">
				order_id = #{record.orderId,jdbcType=BIGINT},
			</if>
			<if test="record.dishId != null">
				dish_id = #{record.dishId,jdbcType=BIGINT},
			</if>
			<if test="record.price != null">
				price = #{record.price,jdbcType=DOUBLE},
			</if>
			<if test="record.qty != null">
				qty = #{record.qty,jdbcType=INTEGER},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update netorder_dishes
		set id = #{record.id,jdbcType=BIGINT},
		shop_id =
		#{record.shopId,jdbcType=BIGINT},
		order_id =
		#{record.orderId,jdbcType=BIGINT},
		dish_id =
		#{record.dishId,jdbcType=BIGINT},
		price =
		#{record.price,jdbcType=DOUBLE},
		qty = #{record.qty,jdbcType=INTEGER}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.oos.model.NetOrderDish">
		update netorder_dishes
		<set>
			<if test="shopId != null">
				shop_id = #{shopId,jdbcType=BIGINT},
			</if>
			<if test="orderId != null">
				order_id = #{orderId,jdbcType=BIGINT},
			</if>
			<if test="dishId != null">
				dish_id = #{dishId,jdbcType=BIGINT},
			</if>
			<if test="price != null">
				price = #{price,jdbcType=DOUBLE},
			</if>
			<if test="qty != null">
				qty = #{qty,jdbcType=INTEGER},
			</if>
		</set>
		where id = #{id,jdbcType=BIGINT}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.oos.model.NetOrderDish">
		update
		netorder_dishes
		set shop_id = #{shopId,jdbcType=BIGINT},
		order_id =
		#{orderId,jdbcType=BIGINT},
		dish_id = #{dishId,jdbcType=BIGINT},
		price =
		#{price,jdbcType=DOUBLE},
		qty = #{qty,jdbcType=INTEGER}
		where id =
		#{id,jdbcType=BIGINT}
	</update>
	<select id="selectPage" resultMap="BaseResultMap"
		parameterType="com.oos.model.NetOrderDishExample">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from netorder_dishes
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
		limit #{pageIndex},#{pageSize}
	</select>

	<!-- 根据netOrderId,查询订单购买项的表,获得订单购买项 -->
	<resultMap id="ShopResultMap" type="com.oos.model.Shop">
		<id column="shop_id" property="id" jdbcType="BIGINT" />
		<result column="member_id" property="memberId" jdbcType="BIGINT" />
		<result column="sname" property="sname" jdbcType="VARCHAR" />
		<result column="address" property="address" jdbcType="VARCHAR" />
		<result column="tel" property="tel" jdbcType="VARCHAR" />
		<result column="status" property="status" jdbcType="INTEGER" />
		<result column="freight" property="freight" jdbcType="DOUBLE" />
		<result column="free_freight_amount" property="freeFreightAmount"
			jdbcType="DOUBLE" />
		<result column="wait_minutes" property="waitMinutes" jdbcType="INTEGER" />
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
		<result column="modify_time" property="modifyTime" jdbcType="TIMESTAMP" />
	</resultMap>
	<resultMap id="DishResultMap" type="com.oos.model.Dish">
		<id column="dish_id" property="id" jdbcType="BIGINT" />
		<result column="dname" property="dname" jdbcType="VARCHAR" />
		<result column="ddesc" property="ddesc" jdbcType="VARCHAR" />
		<result column="status" property="status" jdbcType="INTEGER" />
		<result column="is_deleted" property="isDeleted" jdbcType="INTEGER" />
		<result column="price" property="price" jdbcType="DOUBLE" />
		<result column="coupon" property="coupon" jdbcType="DOUBLE" />
		<result column="on_sale_date" property="onSaleDate" jdbcType="TIMESTAMP" />
	</resultMap>
	<resultMap id="NetOrderDishResultMap" type="com.oos.model.NetOrderDish">
		<id column="id" property="id" jdbcType="BIGINT" />
		<result column="shop_id" property="shopId" jdbcType="BIGINT" />
		<result column="order_id" property="orderId" jdbcType="BIGINT" />
		<result column="dish_id" property="dishId" jdbcType="BIGINT" />
		<result column="price" property="price" jdbcType="DOUBLE" />
		<result column="qty" property="qty" jdbcType="INTEGER" />
		<association property="dish" column="dish_id" javaType="com.oos.model.Dish"
			resultMap="DishResultMap" />
		<association property="shop" column="shop_id" javaType="com.oos.model.Shop"
			resultMap="ShopResultMap" />
	</resultMap>
	<select id="getByNetOrderId" resultMap="NetOrderDishResultMap"
		parameterType="java.lang.Long">
		select nod.*,d.dname,s.*
		from netorder_dishes nod
		left join
		dish d on nod.dish_id=d.id
		left join shop s on nod.shop_id=s.id
		where
		order_id = #{netOrderId,jdbcType=BIGINT}
	</select>
</mapper>